openapi: 3.0.3
info:
  title: OSINT LIAR API
  description: The description of the OSINT LIAR API for building your own applications and integrations
  version: 0.1.0
servers:
  - url: http://127.0.0.1:9906/v1
    description: Your local installation of OSINT LIAR
paths:
  /api-key:
    get:
      summary: Get a list of api keys
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationOption'
    put:
      summary: Update the given Api Key
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of the api key to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationOption'
      responses:
        '200':
          description: Record Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationOption'        
        '404':
          description: Record not found
    delete:
      summary: Delete an Api Key
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of the field to be updated
      responses:
        '200':
          description: Record Deleted
        '404':
          description: Record not found 
  /application-key-token:
    get:
      summary: Get a list of application tokens
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationOption'
    delete:
      summary: Delete an Application token, its origin, permissions, and storage
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of application key token to delete
      responses:
        '200':
          description: Record Deleted
        '404':
          description: Record not found  
    post:
      summary: Create a new application key token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationOption'
      responses:
        '200':
          description: Created          
  /case-management:
    get:
      summary: Get a list of case management records
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseManagement'
    post:
      summary: Create a new case
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseManagementCreateSchema'
      responses:
        '201':
          description: Created
    put:
      summary: Update an existing case
      parameters:
        - in: query
          name: Uuid
          schema:
            type: string
          required: true
          description: The case's Uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseManagementUpdateSchema'
      responses:
        '200':
          description: Updated
        '404':
          description: Record not found
    delete:
      summary: Delete the case and its contents
      parameters:
        - in: query
          name: Uuid
          schema:
            type: string
          required: true
          description: The case's Uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseManagement'
  /configuration-option:
    get:
      summary: Get a list of configuration options
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationOption'
    put:
      summary: 
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of the field to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationOption'
      responses:
        '200':
          description: Record Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationOption'        
        '404':
          description: Record not found
    delete:
      summary: Delete a key from the configuration (Key may be protected)
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of the field to be updated
      responses:
        '200':
          description: Record Deleted
        '404':
          description: Record not found  
  /origin:
    get:
      summary: Get a list of origins
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigurationOption'
    put:
      summary: 
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of the origin to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationOption'
      responses:
        '200':
          description: Record Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationOption'        
        '404':
          description: Record not found
    delete:
      summary: Delete an Origin and its access permissions and storage
      parameters:
        - in: query
          name: Key
          required: true
          schema:
            type: string
          description: The name of the field to be updated
      responses:
        '200':
          description: Record Deleted
        '404':
          description: Record not found                
  /content:
    get:
      summary: Get a list of collected content, ordered by last updated on
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiCoreData'
    put:
      summary: Update an core data record by UUID
      parameters:
        - in: query
          name: Uuid
          required: true
          schema:
            type: string
          description: UUID of the core data record to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCoreData'
      responses:
        '200':
          description: Record Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCoreData'        
        '404':
          description: Record not found
    delete:
      summary: Delete a record by UUID
      parameters:
        - in: query
          name: Uuids
          required: true
          description: An array of uuids
          schema:
            type: array
            items:
              type: string
            minItems: 1
      responses:
        '200':
          description: Record Deleted
        '404':
          description: Record not found                  
  /content/message:
    post:
      summary: Create a new content record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCoreData'
      responses:
        '200':
          description: Created
  /content/get:
    get:
      summary: Get a single ApiCore data record by UUID
      parameters:
        - in: query
          name: Uuid
          required: true
          schema:
            type: string
          description: UUID of the core data record
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCoreData'
        '404':
          description: Record not found
components:
  schemas:
    CaseManagementCreateSchema:
      type: object
      properties:
        Name:
          type: string
          description: Case name
        Note:
          type: string
        CaseWorkerName:
          type: string
        CaseNumber:
          type: string
          description: The email of the author who captured the data
        SubjectName:
          type: string
        SubjectImageData:
          type: string
          description: Base64 encoding of an image
        SourcedFrom:
          type: string
      required:
        - Name  
    CaseManagementUpdateSchema:
      type: object
      properties:
        Name:
          type: string
          description: Case name
        Note:
          type: string
        CaseWorkerName:
          type: string
        CaseNumber:
          type: string
        SubjectName:
          type: string
        SubjectImageData:
          type: string
          description: Base64 encoding of an image
        Uuid:
          type: string
        SourcedFrom:
          type: string
      required:
        - Name        
    CaseManagement:
      type: object
      properties:
        Name:
          type: string
          description: Case name
        Note:
          type: string
        CaseWorkerName:
          type: string
        CaseNumber:
          type: string
        CreatedBy:
          type: string
          description: The email of the author who captured the data
        SubjectName:
          type: string
        SubjectImageData:
          type: string
          description: Base64 encoding of an image
        UpdatedBy:
          type: string
          description: Get the last person who updated this record
        CreatedOn:
          type: string
          format: date-time
        UpdatedOn:
          type: string
          format: date-time
        Uuid:
          type: string
        SourcedFrom:
          type: string
      required:
        - Name
    ApiCoreData:
      type: object
      properties:
        ContentUuid:
          type: string
        ContentTypeName:
          type: string
        ContentCreatedBy:
          type: string
        ContentCreatedOn:
          type: string
          format: date-time
        ContentUpdatedBy:
          type: string
        ContentUpdatedOn:
          type: string
          format: date-time
        ContentData:
          type: string
          format: byte
        ContentDomain:
          type: string
        ContentHash:
          type: string
        ContentHashAlgorithm:
          type: string
        ContentSize:
          type: integer
        ContentId:
          type: integer
        ContentIsValidatedSource:
          type: boolean
        ContentNote:
          type: string
        ContentReferrer:
          type: string
        ContentRelevance:
          type: string
        ContentTitle:
          type: string
        ContentUrl:
          type: string
        ContentLatitude:
          type: number
        ContentLongitude:
          type: number
        ContentRadius:
          type: number
        ContentDistanceUnit:
          type: string
        ContentCountry:
          type: string
        ContentCity:
          type: string
        ContentAddress:
          type: string
        ContentAddress2:
          type: string
        ContentPostalCode:
          type: string
        ContentRegion:
          type: string
        ContentStartedOn:
          type: string
          format: date-time
        ContentTimeZone:
          type: string
        ContentMimeType:
          type: string
        ContentEndedOn:
          type: string
          format: date-time
        ContentIsImportant:
          type: boolean
        ContentRootUuid:
          type: string
        ContentParentUuid:
          type: string
        ContentLevel:
          type: integer
        ContentFrom:
          type: string
        ContentTo:
          type: string
        ContentCc:
          type: string
        ContentBcc:
          type: string
        ContentAttributesJson:
          type: string
        ContentEnrichContentIndexDocument:
          type: string
        CaseManagementCreatedBy:
          type: string
        CaseManagementCreatedOn:
          type: string
          format: date-time
        CaseManagementUpdatedBy:
          type: string
        CaseManagementUpdatedOn:
          type: string
          format: date-time
        CaseManagementUuid:
          type: string
        CaseManagementName:
          type: string
        CaseManagementNote:
          type: string
        CaseManagementCaseNumber:
          type: string
        CaseManagementSubjectName:
          type: string
        CaseManagementCaseWorkerName:
          type: string
        ContentTagsJson:
          type: string
        ContentSelectorsJson:
          type: string
        AttachmentFileName:
          type: string
        ContentScreenShot:
          type: string
      required:
        - ContentTypeName
    ConfigurationOptionCreateSchema:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
        GroupName:
          type: string
          default: Configuration
        Description:
          type: string
      required:
        - Key
        - GroupName 
    ConfigurationOptionUpdateSchema:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
        GroupName:
          type: string
          default: Configuration
        Description:
          type: string
      required:
        - Key
        - GroupName         
    ConfigurationOption:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
        GroupName:
          type: string
          default: Configuration
        Description:
          type: string
      required:
        - Key
        - GroupName
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
